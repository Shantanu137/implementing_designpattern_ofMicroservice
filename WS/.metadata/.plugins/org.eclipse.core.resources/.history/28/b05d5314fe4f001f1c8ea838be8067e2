package com.cts.adb.api;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.cts.adb.entities.Contact;
import com.cts.adb.exceptions.AddressBookException;
import com.cts.adb.services.ContactService;

import jakarta.validation.Valid;

@RestController
@RequestMapping("/contacts")
public class ContactsRestController {

	@Autowired
	private ContactService contactService;
	
	@GetMapping
	public ResponseEntity<List<Contact>> getAllContactsAction(){
		return ResponseEntity.ok(contactService.getAll());
	}
	
	@GetMapping("/{id}")
	public ResponseEntity<Contact> getContactByIdAction(@PathVariable("id") long id){
		Contact c = contactService.getById(id);
		return c==null? ResponseEntity.notFound().build() : ResponseEntity.ok(c);
	}
	
	@PostMapping
	public ResponseEntity<Contact> addContactAction(
			@RequestBody @Valid Contact contact,
			BindingResult results
			) throws AddressBookException{
	
		if(results.hasErrors()) {
			
			throw new AddressBookException();
		}
		
		return new ResponseEntity<>(contactService.add(contact),HttpStatus.CREATED);
	}
	
}
